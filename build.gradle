plugins {
    id 'com.gradle.plugin-publish' version '0.21.0'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'jacoco'
    id 'signing'
    id 'net.researchgate.release' version '3.0.0'
    id 'ru.vyarus.quality' version '4.8.0'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'ru.vyarus.java-lib' version '2.3.0'
    id 'ru.vyarus.github-info' version '1.3.0'
    id 'com.github.ben-manes.versions' version '0.42.0'
    id "pl.droidsonroids.jacoco.testkit" version "1.0.9"
    id 'ru.vyarus.mkdocs' version '2.4.0'
}

sourceCompatibility = 1.8

wrapper {
    gradleVersion = '6.9'
}

ext {
    animalsnifferVersion = '1.6.0'
    cpdVersion = '3.3'
    spotbugsPluginVersion = '4.8.0'
    docVersion = '4.8.0'
}

repositories { mavenLocal(); mavenCentral(); gradlePluginPortal() }
dependencies {
    implementation "com.github.spotbugs.snom:spotbugs-gradle-plugin:$spotbugsPluginVersion"

    testImplementation('org.spockframework:spock-core:2.0-groovy-2.5') {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation "ru.vyarus:gradle-animalsniffer-plugin:$animalsnifferVersion"
    testImplementation "de.aaschmid:gradle-cpd-plugin:$cpdVersion"
}

group = 'ru.vyarus'
description = 'Gradle quality plugin for Java and Groovy'

github {
    user 'xvik'
    license 'MIT'
}

mkdocs {
    publish {
        docPath = project.docVersion
        rootRedirect = true
        rootRedirectTo = 'latest'
        versionAliases = ['latest']
    }
    extras = [
            'version': project.docVersion,
            'checkstyle': '10.3.1',
            'pmd': '6.47.0',
            'spotbugs': '4.7.1',
            'codenarc': '3.1.0',
            'spotbugsPlugin': project.spotbugsPluginVersion,
            'cpd': project.cpdVersion,
            'animalsnifferPlugin': project.animalsnifferVersion,
    ]
}

pom {
    developers {
        developer {
            id 'xvik'
            name 'Vyacheslav Rusakov'
            email 'vyarus@gmail.com'
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty('sonatypeUser')
            password = findProperty('sonatypePassword')
        }
    }
}

// skip signing for jitpack (snapshots)
tasks.withType(Sign) {onlyIf { !System.getenv('JITPACK') }}

// Required signing properties for release: signing.keyId, signing.password and signing.secretKeyRingFile
// (https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials)

javaLib {
    // don't publish gradle metadata artifact
    withoutGradleMetadata()
}


gradlePlugin {
    plugins {
        qualityPlugin {
            id = 'ru.vyarus.quality'
            displayName = project.description
            implementationClass = 'ru.vyarus.gradle.plugin.quality.QualityPlugin'
        }
    }
}
pluginBundle {
    description = 'Static code analysis for Java and Groovy projects'
    tags = ['java', 'groovy', 'quality', 'checkstyle', 'pmd', 'cpd', 'spotbugs', 'codenarc']

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
    }
}

release.git.requireBranch.set('master')

afterReleaseBuild {
    dependsOn = [
            'publishMavenPublicationToSonatypeRepository',
            'closeAndReleaseSonatypeStagingRepository',
            publishPlugins]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'skipped', 'failed'
        exceptionFormat 'full'
    }
    maxHeapSize = '2g'
    doLast {
        sleep(1000)
    }
}

dependencyUpdates.revision = 'release'
